{"version":3,"file":"static/js/329.823a43b8.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.js","components/ContactsList/ContactsList.styled.js","components/ContactsList/ContactsList.js","components/FilterContacts/FilterContacts.styled.js","components/FilterContacts/FilterContacts.js","pages/Contacts.js"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts;\nexport const selectLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.list.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  width: 100%;\n  border-radius: 4px;\n  border: 2px solid #a2b4fb;\n  padding: 8px;\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n`;\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  font-weight: bold;\n`;\nexport const Button = styled.button`\n  font-weight: bold;\n  &:hover {\n    background-color: #a2b4fb;\n    color: white;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { Form } from './ContactForm.styled';\nimport { useState } from 'react';\nimport { FormControl, FormLabel, Input, Button } from '@chakra-ui/react';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const [state, setState] = useState({\n    name: '',\n    number: '',\n  });\n\n  const doesItExist = object => {\n    return contacts.list.some(\n      contact =>\n        contact.name.toLowerCase() === object.name.toLowerCase() ||\n        contact.number === object.number\n    );\n  };\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setState(prevState => ({ ...prevState, [name]: value }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (doesItExist({ ...state })) {\n      alert(`${name} or ${number} is already in contacts.`);\n    } else {\n      dispatch(addContact({ ...state }));\n    }\n    setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  const { name, number } = state;\n  return (\n    <Form onSubmit={handleSubmit}>\n      <FormControl>\n        <FormLabel>\n          Name\n          <Input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            onChange={handleChange}\n            value={name}\n            border=\"1px\"\n            borderColor=\" #a2b4fb\"\n            required\n          />\n        </FormLabel>\n      </FormControl>\n      <FormControl>\n        <FormLabel>\n          Number\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            onChange={handleChange}\n            value={number}\n            border=\"1px\"\n            borderColor=\" #a2b4fb\"\n            required\n          />\n        </FormLabel>\n      </FormControl>\n      <Button type=\"submit\" bgGradient=\"linear(to-r, #a2b4fb, yellow.100)\">\n        Add contact\n      </Button>\n    </Form>\n  );\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  margin-top: 30px;\n  margin-left: 20px;\n  flex-wrap: wrap;\n`;\nexport const Contact = styled.div`\n  margin-top: 10px;\n  display: flex;\n  align-items: center;\n  gap: 20px;\n  font-weight: bold;\n  border: 1px solid #a2b4fb;\n  padding: 8px;\n  border-radius: 4px;\n`;\nexport const ListItem = styled.li`\n  font-size: 1em;\n  font-weight: bold;\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  height: 17px;\n  justify-content: center;\n  align-items: center;\n  font-size: 0.8em;\n  border-radius: 4px;\n  border: 1px solid #a2b4fb;\n  margin-left: auto;\n  padding: 10px;\n\n  &:hover {\n    background-color: #a2b4fb;\n    color: white;\n  }\n`;\n\nexport const Title = styled.h2`\n  font-weight: bold;\n`;\nexport const Contacts = styled.div`\n  display: flex;\n  margin-top: 20px;\n`;\n","import { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\nimport { Contact, Button, Title, Contacts } from './ContactsList.styled';\nimport { List, ListItem } from '@chakra-ui/react';\n\nexport const ContactsList = () => {\n  const dispatch = useDispatch();\n  const filteredcontacts = useSelector(selectVisibleContacts);\n\n  return (\n    <Contacts>\n      <Title>Contacts</Title>\n\n      <List marginLeft=\"110px\">\n        {filteredcontacts.map(contact => (\n          <Contact key={contact.id}>\n            <ListItem>\n              {contact.name} : {contact.number}\n            </ListItem>\n            <Button onClick={() => dispatch(deleteContact(contact.id))}>\n              Delete\n            </Button>\n          </Contact>\n        ))}\n      </List>\n    </Contacts>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Filter = styled.div`\n  display: flex;\n  gap: 30px;\n  font-weight: bold;\n  margin-top: 20px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport { setContactFilter } from 'redux/contacts/filterSlice';\nimport { Filter } from './FilterContacts.styled';\nimport { Input } from '@chakra-ui/react';\n\nexport const FilterContacts = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const handleChangeFilter = e => {\n    dispatch(setContactFilter(e.target.value));\n  };\n\n  return (\n    <Filter>\n      Find contact by name\n      <Input\n        type=\"text\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        value={filter}\n        onChange={handleChangeFilter}\n        border=\"1px\"\n        borderColor=\" #a2b4fb\"\n        required\n      />\n    </Filter>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactsList } from 'components/ContactsList/ContactsList';\nimport { FilterContacts } from 'components/FilterContacts/FilterContacts';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectLoading } from 'redux/contacts/selectors';\nimport { selectError } from 'redux/contacts/selectors';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      <h1 fontSize=\"1.2em\">Phonebook</h1>\n      <ContactForm />\n      <FilterContacts />\n      <div> {isLoading && !error && <b>Request in progress...</b>}</div>\n      <ContactsList />\n    </>\n  );\n}\n"],"names":["selectContacts","state","contacts","selectLoading","isLoading","selectError","error","selectFilter","filter","selectVisibleContacts","createSelector","list","contact","name","toLowerCase","includes","Form","styled","ContactForm","dispatch","useDispatch","useSelector","useState","number","setState","handleChange","e","target","value","prevState","onSubmit","object","preventDefault","some","alert","addContact","I","type","pattern","title","onChange","border","borderColor","required","bgGradient","Contact","Button","Title","Contacts","ContactsList","filteredcontacts","marginLeft","map","onClick","deleteContact","id","Filter","FilterContacts","setContactFilter","useEffect","fetchContacts","Helmet","fontSize"],"sourceRoot":""}