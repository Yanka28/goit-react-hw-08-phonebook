{"version":3,"file":"static/js/139.af7ffec2.chunk.js","mappings":"0RAMaA,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MACTC,GAAeC,EAAAA,EAAAA,KAAfD,WACFE,GAAQC,EAAAA,EAAAA,KA6Bd,OACE,+BACE,kBAAMC,SAlBW,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACfV,GACEW,EAAAA,EAAAA,IAAS,CACPC,KAAMH,EAAKI,SAASD,KAAKE,MACzBC,MAAON,EAAKI,SAASE,MAAMD,MAC3BE,SAAUP,EAAKI,SAASG,SAASF,SAGrCL,EAAKQ,QACc,KAAff,GArBJE,EAAM,CACJc,SAAU,MACVC,MAAO,8CACPC,YAAa,wOACbC,OAAQ,QACRC,SAAU,IACVC,YAAY,GAkBf,EAIG,WACE,UAAC,KAAD,CAAaC,YAAU,EAAvB,WACE,SAAC,IAAD,wBACA,SAAC,EAAAC,EAAD,CAAOC,KAAK,OAAOd,KAAK,OAAOe,aAAa,SAE9C,UAAC,KAAD,CAAaH,YAAU,EAAvB,WACE,SAAC,IAAD,qBACA,SAAC,EAAAC,EAAD,CAAOC,KAAK,QAAQd,KAAK,QAAQe,aAAa,SAEhD,UAAC,KAAD,CAAaH,YAAU,EAAvB,WACE,SAAC,IAAD,wBACA,SAAC,EAAAC,EAAD,CAAOC,KAAK,WAAWd,KAAK,WAAWe,aAAa,SAEtD,SAAC,IAAD,CACED,KAAK,SACLE,WAAW,oCACXC,UAAU,OAHZ,0BAUP,EC5Dc,SAASC,IACtB,OACE,UAAC,KAAD,YACE,SAAC,KAAD,WACE,+CAEF,SAAC/B,EAAD,MAGL,C","sources":["components/RegisterForm/RegisterForm.js","pages/Register.js"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operations';\nimport { FormControl, FormLabel, Input, Button } from '@chakra-ui/react';\nimport { useToast } from '@chakra-ui/react';\nimport { useAuth } from 'hooks';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n  const { isLoggedIn } = useAuth();\n  const toast = useToast();\n\n  function message() {\n    toast({\n      position: 'top',\n      title: 'Помилка!',\n      description: 'Ви вводите некоректні дані, спробуйте ще раз',\n      status: 'error',\n      duration: 5000,\n      isClosable: true,\n    });\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    dispatch(\n      register({\n        name: form.elements.name.value,\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    );\n    form.reset();\n    if (isLoggedIn === '') {\n      message();\n    }\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <FormControl isRequired>\n          <FormLabel>Username</FormLabel>\n          <Input type=\"text\" name=\"name\" autoComplete=\"\" />\n        </FormControl>\n        <FormControl isRequired>\n          <FormLabel>Email</FormLabel>\n          <Input type=\"email\" name=\"email\" autoComplete=\"\" />\n        </FormControl>\n        <FormControl isRequired>\n          <FormLabel>Password</FormLabel>\n          <Input type=\"password\" name=\"password\" autoComplete=\"\" />\n        </FormControl>\n        <Button\n          type=\"submit\"\n          bgGradient=\"linear(to-r, #a2b4fb, yellow.100)\"\n          marginTop=\"10px\"\n        >\n          Register\n        </Button>\n      </form>\n    </>\n  );\n};\n","import { Helmet, HelmetProvider } from 'react-helmet-async';\nimport { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nexport default function Register() {\n  return (\n    <HelmetProvider>\n      <Helmet>\n        <title>Registration</title>\n      </Helmet>\n      <RegisterForm />\n    </HelmetProvider>\n  );\n}\n"],"names":["RegisterForm","dispatch","useDispatch","isLoggedIn","useAuth","toast","useToast","onSubmit","e","preventDefault","form","currentTarget","register","name","elements","value","email","password","reset","position","title","description","status","duration","isClosable","isRequired","I","type","autoComplete","bgGradient","marginTop","Register"],"sourceRoot":""}