{"version":3,"file":"static/js/546.2a164be5.chunk.js","mappings":"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","sources":["../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/contacts/selectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.js","components/ContactsList/ContactsList.styled.js","../node_modules/@chakra-ui/layout/src/list.tsx","../node_modules/@chakra-ui/react-children-utils/dist/index.mjs","components/ContactsList/ContactsList.js","components/FilterContacts/FilterContacts.styled.js","components/FilterContacts/FilterContacts.js","pages/Contacts.js"],"sourcesContent":["// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts;\nexport const selectLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.list.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  width: 100%;\n  border-radius: 4px;\n  border: 2px solid #a2b4fb;\n  padding: 8px;\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n`;\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  font-weight: bold;\n`;\nexport const Button = styled.button`\n  font-weight: bold;\n  &:hover {\n    background-color: #a2b4fb;\n    color: white;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { Form } from './ContactForm.styled';\nimport { useToast } from '@chakra-ui/react';\nimport { useState } from 'react';\nimport { FormControl, FormLabel, Input, Button } from '@chakra-ui/react';\n\nexport const ContactForm = () => {\n  const toast = useToast({ position: 'top' });\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const [state, setState] = useState({\n    name: '',\n    number: '',\n  });\n\n  const doesItExist = object => {\n    return contacts.list.some(\n      contact =>\n        contact.name.toLowerCase() === object.name.toLowerCase() ||\n        contact.number === object.number\n    );\n  };\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setState(prevState => ({ ...prevState, [name]: value }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (doesItExist({ ...state })) {\n      toast({\n        title: `${name} or ${number} is already in contacts.`,\n        status: 'warning',\n        isClosable: true,\n      });\n    } else {\n      dispatch(addContact({ ...state }));\n    }\n    setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  const { name, number } = state;\n  return (\n    <Form onSubmit={handleSubmit}>\n      <FormControl isRequired>\n        <FormLabel>Name </FormLabel>\n        <Input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          onChange={handleChange}\n          value={name}\n          border=\"1px\"\n          borderColor=\" #a2b4fb\"\n          required\n        />\n      </FormControl>\n      <FormControl isRequired>\n        <FormLabel>Number </FormLabel>\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          onChange={handleChange}\n          value={number}\n          border=\"1px\"\n          borderColor=\" #a2b4fb\"\n          required\n        />\n      </FormControl>\n      <Button type=\"submit\" bgGradient=\"linear(to-r, #a2b4fb, yellow.100)\">\n        Add contact\n      </Button>\n    </Form>\n  );\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  margin-top: 30px;\n  margin-left: 20px;\n  flex-wrap: wrap;\n`;\nexport const Contact = styled.div`\n  margin-top: 10px;\n  display: flex;\n  align-items: center;\n  gap: 20px;\n  font-weight: bold;\n  border: 1px solid #a2b4fb;\n  padding: 8px;\n  border-radius: 4px;\n`;\nexport const ListItem = styled.li`\n  font-size: 1em;\n  font-weight: bold;\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  height: 17px;\n  justify-content: center;\n  align-items: center;\n  font-size: 0.8em;\n  border-radius: 4px;\n  border: 1px solid #a2b4fb;\n  margin-left: auto;\n  padding: 10px;\n\n  &:hover {\n    background-color: #a2b4fb;\n    color: white;\n  }\n`;\n\nexport const Title = styled.h2`\n  font-weight: bold;\n`;\nexport const Contacts = styled.div`\n  display: flex;\n  margin-top: 20px;\n`;\n","import { Icon, IconProps } from \"@chakra-ui/icon\"\nimport { createContext } from \"@chakra-ui/react-context\"\nimport { getValidChildren } from \"@chakra-ui/react-children-utils\"\nimport type {\n  HTMLChakraProps,\n  SystemProps,\n  ThemingProps,\n} from \"@chakra-ui/system\"\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  SystemStyleObject,\n  useMultiStyleConfig,\n} from \"@chakra-ui/system\"\n\nconst [ListStylesProvider, useListStyles] = createContext<\n  Record<string, SystemStyleObject>\n>({\n  name: `ListStylesContext`,\n  errorMessage: `useListStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<List />\" `,\n})\n\nexport { useListStyles }\n\ninterface ListOptions {\n  /**\n   * Shorthand prop for `listStyleType`\n   * @type SystemProps[\"listStyleType\"]\n   */\n  styleType?: SystemProps[\"listStyleType\"]\n  /**\n   * Shorthand prop for `listStylePosition`\n   * @type SystemProps[\"listStylePosition\"]\n   */\n  stylePosition?: SystemProps[\"listStylePosition\"]\n  /**\n   * The space between each list item\n   * @type SystemProps[\"margin\"]\n   */\n  spacing?: SystemProps[\"margin\"]\n}\n\nexport interface ListProps\n  extends HTMLChakraProps<\"ul\">,\n    ThemingProps<\"List\">,\n    ListOptions {}\n\n/**\n * List is used to display list items, it renders a `<ul>` by default.\n *\n * @see Docs https://chakra-ui.com/list\n */\nexport const List = forwardRef<ListProps, \"ul\">(function List(props, ref) {\n  const styles = useMultiStyleConfig(\"List\", props)\n  const {\n    children,\n    styleType = \"none\",\n    stylePosition,\n    spacing,\n    ...rest\n  } = omitThemingProps(props)\n\n  const validChildren = getValidChildren(children)\n\n  const selector = \"& > *:not(style) ~ *:not(style)\"\n\n  const spacingStyle = spacing ? { [selector]: { mt: spacing } } : {}\n\n  return (\n    <ListStylesProvider value={styles}>\n      <chakra.ul\n        ref={ref}\n        listStyleType={styleType}\n        listStylePosition={stylePosition}\n        /**\n         * We added this role to fix the Safari accessibility issue with list-style-type: none\n         * @see https://www.scottohara.me/blog/2019/01/12/lists-and-safari.html\n         */\n        role=\"list\"\n        __css={{ ...styles.container, ...spacingStyle }}\n        {...rest}\n      >\n        {validChildren}\n      </chakra.ul>\n    </ListStylesProvider>\n  )\n})\n\nList.displayName = \"List\"\n\nexport const OrderedList = forwardRef<ListProps, \"ol\">((props, ref) => {\n  const { as, ...rest } = props\n  return (\n    <List ref={ref} as=\"ol\" styleType=\"decimal\" marginStart=\"1em\" {...rest} />\n  )\n})\n\nOrderedList.displayName = \"OrderedList\"\n\nexport const UnorderedList = forwardRef<ListProps, \"ul\">(function UnorderedList(\n  props,\n  ref,\n) {\n  const { as, ...rest } = props\n  return (\n    <List ref={ref} as=\"ul\" styleType=\"initial\" marginStart=\"1em\" {...rest} />\n  )\n})\n\nUnorderedList.displayName = \"UnorderedList\"\n\nexport interface ListItemProps extends HTMLChakraProps<\"li\"> {}\n\n/**\n * ListItem\n *\n * Used to render a list item\n */\nexport const ListItem = forwardRef<ListItemProps, \"li\">(function ListItem(\n  props,\n  ref,\n) {\n  const styles = useListStyles()\n\n  return <chakra.li ref={ref} {...props} __css={styles.item} />\n})\n\nListItem.displayName = \"ListItem\"\n\n/**\n * ListIcon\n *\n * Used to render an icon beside the list item text\n */\nexport const ListIcon = forwardRef<IconProps, \"svg\">(function ListIcon(\n  props,\n  ref,\n) {\n  const styles = useListStyles()\n\n  return <Icon ref={ref} role=\"presentation\" {...props} __css={styles.icon} />\n})\n\nListIcon.displayName = \"ListIcon\"\n","// src/index.ts\nimport { Children, isValidElement } from \"react\";\nfunction getValidChildren(children) {\n  return Children.toArray(children).filter(\n    (child) => isValidElement(child)\n  );\n}\nexport {\n  getValidChildren\n};\n","import { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\nimport { Contact, Button, Title, Contacts } from './ContactsList.styled';\nimport { List, ListItem } from '@chakra-ui/react';\n\nexport const ContactsList = () => {\n  const dispatch = useDispatch();\n  const filteredcontacts = useSelector(selectVisibleContacts);\n\n  return (\n    <Contacts>\n      <Title>Contacts</Title>\n\n      <List marginLeft=\"110px\">\n        {filteredcontacts.map(contact => (\n          <Contact key={contact.id}>\n            <ListItem>\n              {contact.name} : {contact.number}\n            </ListItem>\n            <Button onClick={() => dispatch(deleteContact(contact.id))}>\n              Delete\n            </Button>\n          </Contact>\n        ))}\n      </List>\n    </Contacts>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Filter = styled.div`\n  display: flex;\n  gap: 30px;\n  font-weight: bold;\n  margin-top: 20px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport { setContactFilter } from 'redux/contacts/filterSlice';\nimport { Filter } from './FilterContacts.styled';\nimport { Input } from '@chakra-ui/react';\n\nexport const FilterContacts = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const handleChangeFilter = e => {\n    dispatch(setContactFilter(e.target.value));\n  };\n\n  return (\n    <Filter>\n      Find contact by name\n      <Input\n        type=\"text\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        value={filter}\n        onChange={handleChangeFilter}\n        border=\"1px\"\n        borderColor=\" #a2b4fb\"\n        required\n      />\n    </Filter>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactsList } from 'components/ContactsList/ContactsList';\nimport { FilterContacts } from 'components/FilterContacts/FilterContacts';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectLoading } from 'redux/contacts/selectors';\nimport { selectError } from 'redux/contacts/selectors';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <HelmetProvider>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <FilterContacts />\n      <div> {isLoading && !error && <b>Request in progress...</b>}</div>\n      <ContactsList />\n    </HelmetProvider>\n  );\n}\n"],"names":["NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectContacts","state","contacts","selectLoading","isLoading","selectError","error","selectFilter","filter","selectVisibleContacts","list","contact","toLowerCase","includes","Form","styled","ContactForm","toast","useToast","position","dispatch","useDispatch","useSelector","useState","number","setState","handleChange","e","target","prevState","onSubmit","object","preventDefault","some","title","status","isClosable","addContact","isRequired","I","type","pattern","onChange","border","borderColor","required","bgGradient","Contact","Button","Title","Contacts","createContext","errorMessage","ListStylesProvider","useListStyles","List","props","forwardRef","styles","children","styleType","useMultiStyleConfig","omitThemingProps","stylePosition","spacing","rest","validChildren","spacingStyle","Children","child","isValidElement","getValidChildren","ul","listStyleType","chakra","role","__css","container","displayName","OrderedList","as","UnorderedList","ListItem","ListIcon","Icon","ContactsList","filteredcontacts","marginLeft","onClick","deleteContact","id","Filter","FilterContacts","setContactFilter","useEffect","fetchContacts"],"sourceRoot":""}