{"version":3,"file":"static/js/329.692975ed.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.js","components/ContactsList/ContactsList.styled.js","components/ContactsList/ContactsList.js","components/FilterContacts/FilterContacts.styled.js","components/FilterContacts/FilterContacts.js","pages/Contacts.js"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts;\nexport const selectLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.list.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  width: 40%;\n  border-radius: 4px;\n  border: 2px solid black;\n  padding: 8px;\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n`;\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  font-weight: bold;\n`;\nexport const Button = styled.button`\n  font-weight: bold;\n  &:hover {\n    background-color: #a580d5;\n    color: white;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { Form, Label, Button } from './ContactForm.styled';\nimport { useState } from 'react';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const [state, setState] = useState({\n    name: '',\n    phone: '',\n  });\n\n  const doesItExist = object => {\n    return contacts.list.some(\n      contact =>\n        contact.name.toLowerCase() === object.name.toLowerCase() ||\n        contact.phone === object.phone\n    );\n  };\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setState(prevState => ({ ...prevState, [name]: value }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (doesItExist({ ...state })) {\n      alert(`${name} or ${phone} is already in contacts.`);\n    } else {\n      dispatch(addContact({ ...state }));\n    }\n    setState({\n      name: '',\n      phone: '',\n    });\n  };\n\n  const { name, phone } = state;\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          onChange={handleChange}\n          value={name}\n          required\n        />\n      </Label>\n      <Label>\n        Number\n        <input\n          type=\"tel\"\n          name=\"phone\"\n          pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          onChange={handleChange}\n          value={phone}\n          required\n        />\n      </Label>\n      <Button type=\"submit\">Add contact</Button>\n    </Form>\n  );\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  margin-top: 30px;\n  margin-left: 20px;\n  flex-wrap: wrap;\n`;\nexport const Contact = styled.div`\n  margin-top: 10px;\n  display: flex;\n  align-items: center;\n  gap: 20px;\n`;\nexport const ListItem = styled.li`\n  font-size: 18px;\n  font-weight: bold;\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  height: 17px;\n  justify-content: center;\n  align-items: center;\n  font-size: 0.8em;\n  border-radius: 4px;\n  border: 1px solid black;\n\n  &:hover {\n    background-color: #a580d5;\n    color: white;\n  }\n`;\n","import { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\nimport { List, Contact, ListItem, Button } from './ContactsList.styled';\n\nexport const ContactsList = () => {\n  const dispatch = useDispatch();\n  const filteredcontacts = useSelector(selectVisibleContacts);\n\n  return (\n    <List>\n      {filteredcontacts.map(contact => (\n        <Contact key={contact.id}>\n          <ListItem>\n            {contact.name}:{contact.phone}\n          </ListItem>\n          <Button onClick={() => dispatch(deleteContact(contact.id))}>\n            Delete\n          </Button>\n        </Contact>\n      ))}\n    </List>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Filter = styled.div`\n  display: flex;\n  gap: 30px;\n  font-weight: bold;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport { setContactFilter } from 'redux/contacts/filterSlice';\nimport { Filter } from './FilterContacts.styled';\n\nexport const FilterContacts = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const handleChangeFilter = e => {\n    dispatch(setContactFilter(e.target.value));\n  };\n\n  return (\n    <Filter>\n      Find contact by name\n      <input\n        type=\"text\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        value={filter}\n        onChange={handleChangeFilter}\n        required\n      />\n    </Filter>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactsList } from 'components/ContactsList/ContactsList';\nimport { FilterContacts } from 'components/FilterContacts/FilterContacts';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectLoading } from 'redux/contacts/selectors';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n  // const error = useSelector(se)\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <FilterContacts />\n      <div>{isLoading && <b>Request in progress...</b>}</div>\n      <ContactsList />\n    </>\n  );\n}\n"],"names":["selectContacts","state","contacts","selectLoading","isLoading","selectFilter","filter","selectVisibleContacts","createSelector","list","contact","name","toLowerCase","includes","Form","styled","Label","Button","ContactForm","dispatch","useDispatch","useSelector","useState","phone","setState","handleChange","e","target","value","prevState","onSubmit","object","preventDefault","some","alert","addContact","type","pattern","title","onChange","required","List","Contact","ListItem","ContactsList","filteredcontacts","map","onClick","deleteContact","id","Filter","FilterContacts","setContactFilter","Contacts","useEffect","fetchContacts","Helmet"],"sourceRoot":""}